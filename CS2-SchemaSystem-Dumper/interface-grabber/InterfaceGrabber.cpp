#include "InterfaceGrabber.hpp"
#include "../memory/Memory.hpp"
#include <cstdio>

std::map<const char*, std::map<const char*, uintptr_t>> InterfaceGrabber::interfacesForModule = {};
std::map<const char*, const char*> InterfaceGrabber::interfaceGrabberPatternForModule = {};
/*
{"engine2.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? 00"},
{ "client.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? 01" },
	*/
void InterfaceGrabber::Inialize() {
	// initialize function since i wasn't able to initialize those maps inline
	// https://stackoverflow.com/questions/13626653/what-does-new-variable-value-in-c-do
	if (InterfaceGrabber::initialized)
		return;
	InterfaceGrabber::initialized = true;

	new (&InterfaceGrabber::interfaceGrabberPatternForModule)  std::map<const char*, const char*>{
		/*{	"tier0.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??"	},
		{	"engine2.dll",	"4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??"	},
		{	"particles.dll",	"4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??"	},
		{	"client.dll",	"4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{	"panorama.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??"	},
		{	"matchmaking.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??"	},
		{	"server.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??"	},
		{	"animationsystem.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??"	},
		{	"inputsystem.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??"	},
		{	"materialsystem2.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??"	},
		{	"panorama.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??"	},
		{	"panoramauiclient.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??"	},
		{	"rendersystemdx11.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??"	},
		{	"worldrenderer.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??"	},*/
		{  "tier0.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "engine2.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "steam_api64.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "steamnetworkingsockets.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "dbghelp.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "SDL3.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "filesystem_stdio.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "inputsystem.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "imemanager.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "localize.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "rendersystemdx11.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "amd_ags_x64.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "D3DCOMPILER_47.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "resourcesystem.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "schemasystem.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "materialsystem2.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "meshsystem.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "worldrenderer.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "pulse_system.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "v8.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "v8_libbase.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "v8_zlib.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "v8_icuuc.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "v8_icui18n.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "vscript.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "networksystem.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "animationsystem.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "vphysics2.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "soundsystem.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "steamaudio.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "phonon.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "scenesystem.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "particles.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "panoramauiclient.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "video64.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "libavresample-4.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "libavformat-58.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "libswscale-5.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "libavutil-56.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "libavcodec-58.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "v8system.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "v8_libplatform.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "panorama.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "panorama_text_pango.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "libfontconfig-1.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "libpango-1.0-0.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "libpangoft2-1.0-0.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "libfreetype-6.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "libglib-2.0-0.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "libgobject-2.0-0.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "libgmodule-2.0-0.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "server.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "client.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "embree3.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "libmpg123-0.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "cairo.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "host.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "scenefilecache.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "matchmaking.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" },
		{ "navsystem.dll", "4C 8D 05 ?? ?? ?? ?? 48 8D 15 ?? ?? ?? ?? 48 8D 0D ?? ?? ?? ?? E9 ?? ?? ?? ??" }
	};

	new (&InterfaceGrabber::interfacesForModule) std::map<const char*, std::map<const char*, uintptr_t>>{};
	
}

void InterfaceGrabber::CollectInterfacesFromDll(const char* dllName, bool log) {

	InterfaceGrabber::Inialize();


	if (InterfaceGrabber::interfacesForModule.contains(dllName)) {
		InterfaceGrabber::pLogger->Log("Already collected interfaces from \"%s\"\n", dllName);
		return;
	}
	InterfaceGrabber::interfacesForModule.insert({ dllName, {} });

	if (!InterfaceGrabber::interfaceGrabberPatternForModule.contains(dllName)) {
		InterfaceGrabber::pLogger->Log("No pattern defined for \"%s\"\n", dllName);
		return;
	}

	auto dllPattern = InterfaceGrabber::interfaceGrabberPatternForModule[dllName];
	auto handle = (uintptr_t)GetModuleHandle(dllName);
	if (!GetProcAddress(GetModuleHandle(dllName), "CreateInterface")) {
		InterfaceGrabber::pLogger->Log("'%s' doesn't have a 'CreateInterface' export. Aborting!\n", dllName);
		return;
	}
	auto patternFactories = Memory::PatternScanList(dllName, dllPattern);

	if (patternFactories.size() <= 0) {
		InterfaceGrabber::pLogger->Log("No factories found in \"%s\"\n", dllName);
		return;
	}


	for (const auto& interfaceDef : patternFactories) {
		
		char* namePtr = (char*)Memory::GetInstructionValue((uintptr_t)interfaceDef, 3, 7);
		std::string  x(namePtr);
		if (x.find_first_not_of("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567890_") != std::string::npos)
			continue;

		uintptr_t returnPtrAddr = Memory::GetInstructionValue((uintptr_t)interfaceDef + 0x7, 3, 7);
		uintptr_t interfacePtr = Memory::GetInstructionValue(returnPtrAddr, 3, 7);
		if(log)
			InterfaceGrabber::pLogger->Log("%s: 0x%p | %s + 0x%p\n", namePtr,  interfacePtr, dllName,interfacePtr- handle);

		InterfaceGrabber::interfacesForModule[dllName].insert({ namePtr, interfacePtr });
	
	}

}


void InterfaceGrabber::CollectInterfacesForEachDll(bool log) {
	
	InterfaceGrabber::Inialize();

	std::map<const char*, const char*>::iterator it;
	
	for (it = InterfaceGrabber::interfaceGrabberPatternForModule.begin(); it != InterfaceGrabber::interfaceGrabberPatternForModule.end(); it++)
	{
		// InterfaceGrabber::pLogger->Log("\n[InterfaceGrabber] Collecting interfaces for \"%s\"\n", it->first);
		InterfaceGrabber::CollectInterfacesFromDll(it->first, log);
		// InterfaceGrabber::pLogger->Log("[InterfaceGrabber] Found %i interfaces in \"%s\"\n", InterfaceGrabber::interfacesForModule[it->first].size(), it->first);

	}
}

void InterfaceGrabber::GenerateCheatEngineTable(const char* outputFile) {
	InterfaceGrabber::Inialize();
	InterfaceGrabber::CollectInterfacesForEachDll(false);
	FILE* cheatEngineTableFile;
	cheatEngineTableFile = fopen(outputFile, "w");
	std::map<const char*, const char*>::iterator moduleIterator;

	fprintf(cheatEngineTableFile, "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n");
	fprintf(cheatEngineTableFile, "<CheatTable CheatEngineTableVersion=\"46\">\n");
	fprintf(cheatEngineTableFile, "	<CheatEntries>\n");

	int moduleIndex = 1;
	
	for (moduleIterator = InterfaceGrabber::interfaceGrabberPatternForModule.begin(); moduleIterator != InterfaceGrabber::interfaceGrabberPatternForModule.end(); moduleIterator++) {
	
		fprintf(cheatEngineTableFile, "		<CheatEntry>\n");
		fprintf(cheatEngineTableFile, "			<ID>%i</ID>\n", moduleIndex);
		fprintf(cheatEngineTableFile, "			<Description>\"%s\"</Description>\n", moduleIterator->first);
		fprintf(cheatEngineTableFile, "			<GroupHeader>1</GroupHeader>\n");
		fprintf(cheatEngineTableFile, "			<CheatEntries>\n");
		
		std::map<const char*, uintptr_t>::iterator interfaceIterator;
		
		int interfaceIdx = 1;
		
		auto handle = (uintptr_t)GetModuleHandle(moduleIterator->first);
		
		for (interfaceIterator = InterfaceGrabber::interfacesForModule[moduleIterator->first].begin(); interfaceIterator != InterfaceGrabber::interfacesForModule[moduleIterator->first].end(); interfaceIterator++) {
			
			fprintf(cheatEngineTableFile, "				<CheatEntry>\n");
			fprintf(cheatEngineTableFile, "					<ID>%i</ID>\n", interfaceIdx*moduleIndex);
			fprintf(cheatEngineTableFile, "					<Description>\"%s\"</Description>\n", interfaceIterator->first);
			fprintf(cheatEngineTableFile, "					<ShowAsSigned>0</ShowAsSigned>\n");
			fprintf(cheatEngineTableFile, "					 <VariableType>4 Bytes</VariableType>\n");
			fprintf(cheatEngineTableFile, "					 <Address>%s + 0x%p</Address>\n", moduleIterator->first,interfaceIterator->second - handle);
			fprintf(cheatEngineTableFile, "				</CheatEntry>\n");

			interfaceIdx++;
		}

		fprintf(cheatEngineTableFile, "			</CheatEntries>\n");
		fprintf(cheatEngineTableFile, "		</CheatEntry>\n");
		
		moduleIndex++;

	}

	fprintf(cheatEngineTableFile, "	</CheatEntries>\n");
	fprintf(cheatEngineTableFile, "	<UserdefinedSymbols/>\n");
	fprintf(cheatEngineTableFile, "</CheatTable>\n\n");
	
	fclose(cheatEngineTableFile);
	InterfaceGrabber::pLogger->Log("CreatedTable\n");
}