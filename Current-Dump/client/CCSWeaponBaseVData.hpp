#include <Windows.h>


namespace xsip {
	namespace client {
		namespace CCSWeaponBaseVData {
			 uintptr_t m_WeaponType = 0x348; // CSWeaponType
			 uintptr_t m_WeaponCategory = 0x34c; // CSWeaponCategory
			 uintptr_t m_szViewModel = 0x350; // CResourceNameTyped< CWeakHandle< InfoForResourceTypeCModel > >
			 uintptr_t m_szPlayerModel = 0x430; // CResourceNameTyped< CWeakHandle< InfoForResourceTypeCModel > >
			 uintptr_t m_szWorldDroppedModel = 0x510; // CResourceNameTyped< CWeakHandle< InfoForResourceTypeCModel > >
			 uintptr_t m_szAimsightLensMaskModel = 0x5f0; // CResourceNameTyped< CWeakHandle< InfoForResourceTypeCModel > >
			 uintptr_t m_szMagazineModel = 0x6d0; // CResourceNameTyped< CWeakHandle< InfoForResourceTypeCModel > >
			 uintptr_t m_szHeatEffect = 0x7b0; // CResourceNameTyped< CWeakHandle< InfoForResourceTypeIParticleSystemDefinition > >
			 uintptr_t m_szEjectBrassEffect = 0x890; // CResourceNameTyped< CWeakHandle< InfoForResourceTypeIParticleSystemDefinition > >
			 uintptr_t m_szMuzzleFlashParticleAlt = 0x970; // CResourceNameTyped< CWeakHandle< InfoForResourceTypeIParticleSystemDefinition > >
			 uintptr_t m_szMuzzleFlashThirdPersonParticle = 0xa50; // CResourceNameTyped< CWeakHandle< InfoForResourceTypeIParticleSystemDefinition > >
			 uintptr_t m_szMuzzleFlashThirdPersonParticleAlt = 0xb30; // CResourceNameTyped< CWeakHandle< InfoForResourceTypeIParticleSystemDefinition > >
			 uintptr_t m_szTracerParticle = 0xc10; // CResourceNameTyped< CWeakHandle< InfoForResourceTypeIParticleSystemDefinition > >
			 uintptr_t m_GearSlot = 0xcf0; // gear_slot_t
			 uintptr_t m_GearSlotPosition = 0xcf4; // int32
			 uintptr_t m_DefaultLoadoutSlot = 0xcf8; // loadout_slot_t
			 uintptr_t m_sWrongTeamMsg = 0xd00; // CUtlString
			 uintptr_t m_nPrice = 0xd08; // int32
			 uintptr_t m_nKillAward = 0xd0c; // int32
			 uintptr_t m_nPrimaryReserveAmmoMax = 0xd10; // int32
			 uintptr_t m_nSecondaryReserveAmmoMax = 0xd14; // int32
			 uintptr_t m_bMeleeWeapon = 0xd18; // bool
			 uintptr_t m_bHasBurstMode = 0xd19; // bool
			 uintptr_t m_bIsRevolver = 0xd1a; // bool
			 uintptr_t m_bCannotShootUnderwater = 0xd1b; // bool
			 uintptr_t m_szName = 0xd20; // CGlobalSymbol
			 uintptr_t m_szAnimExtension = 0xd28; // CUtlString
			 uintptr_t m_eSilencerType = 0xd30; // CSWeaponSilencerType
			 uintptr_t m_nCrosshairMinDistance = 0xd34; // int32
			 uintptr_t m_nCrosshairDeltaDistance = 0xd38; // int32
			 uintptr_t m_bIsFullAuto = 0xd3c; // bool
			 uintptr_t m_nNumBullets = 0xd40; // int32
			 uintptr_t m_flCycleTime = 0xd44; // CFiringModeFloat
			 uintptr_t m_flMaxSpeed = 0xd4c; // CFiringModeFloat
			 uintptr_t m_flSpread = 0xd54; // CFiringModeFloat
			 uintptr_t m_flInaccuracyCrouch = 0xd5c; // CFiringModeFloat
			 uintptr_t m_flInaccuracyStand = 0xd64; // CFiringModeFloat
			 uintptr_t m_flInaccuracyJump = 0xd6c; // CFiringModeFloat
			 uintptr_t m_flInaccuracyLand = 0xd74; // CFiringModeFloat
			 uintptr_t m_flInaccuracyLadder = 0xd7c; // CFiringModeFloat
			 uintptr_t m_flInaccuracyFire = 0xd84; // CFiringModeFloat
			 uintptr_t m_flInaccuracyMove = 0xd8c; // CFiringModeFloat
			 uintptr_t m_flRecoilAngle = 0xd94; // CFiringModeFloat
			 uintptr_t m_flRecoilAngleVariance = 0xd9c; // CFiringModeFloat
			 uintptr_t m_flRecoilMagnitude = 0xda4; // CFiringModeFloat
			 uintptr_t m_flRecoilMagnitudeVariance = 0xdac; // CFiringModeFloat
			 uintptr_t m_nTracerFrequency = 0xdb4; // CFiringModeInt
			 uintptr_t m_flInaccuracyJumpInitial = 0xdbc; // float32
			 uintptr_t m_flInaccuracyJumpApex = 0xdc0; // float32
			 uintptr_t m_flInaccuracyReload = 0xdc4; // float32
			 uintptr_t m_nRecoilSeed = 0xdc8; // int32
			 uintptr_t m_nSpreadSeed = 0xdcc; // int32
			 uintptr_t m_flTimeToIdleAfterFire = 0xdd0; // float32
			 uintptr_t m_flIdleInterval = 0xdd4; // float32
			 uintptr_t m_flAttackMovespeedFactor = 0xdd8; // float32
			 uintptr_t m_flHeatPerShot = 0xddc; // float32
			 uintptr_t m_flInaccuracyPitchShift = 0xde0; // float32
			 uintptr_t m_flInaccuracyAltSoundThreshold = 0xde4; // float32
			 uintptr_t m_flBotAudibleRange = 0xde8; // float32
			 uintptr_t m_szUseRadioSubtitle = 0xdf0; // CUtlString
			 uintptr_t m_bUnzoomsAfterShot = 0xdf8; // bool
			 uintptr_t m_bHideViewModelWhenZoomed = 0xdf9; // bool
			 uintptr_t m_nZoomLevels = 0xdfc; // int32
			 uintptr_t m_nZoomFOV1 = 0xe00; // int32
			 uintptr_t m_nZoomFOV2 = 0xe04; // int32
			 uintptr_t m_flZoomTime0 = 0xe08; // float32
			 uintptr_t m_flZoomTime1 = 0xe0c; // float32
			 uintptr_t m_flZoomTime2 = 0xe10; // float32
			 uintptr_t m_flIronSightPullUpSpeed = 0xe14; // float32
			 uintptr_t m_flIronSightPutDownSpeed = 0xe18; // float32
			 uintptr_t m_flIronSightFOV = 0xe1c; // float32
			 uintptr_t m_flIronSightPivotForward = 0xe20; // float32
			 uintptr_t m_flIronSightLooseness = 0xe24; // float32
			 uintptr_t m_angPivotAngle = 0xe28; // QAngle
			 uintptr_t m_vecIronSightEyePos = 0xe34; // Vector
			 uintptr_t m_nDamage = 0xe40; // int32
			 uintptr_t m_flHeadshotMultiplier = 0xe44; // float32
			 uintptr_t m_flArmorRatio = 0xe48; // float32
			 uintptr_t m_flPenetration = 0xe4c; // float32
			 uintptr_t m_flRange = 0xe50; // float32
			 uintptr_t m_flRangeModifier = 0xe54; // float32
			 uintptr_t m_flFlinchVelocityModifierLarge = 0xe58; // float32
			 uintptr_t m_flFlinchVelocityModifierSmall = 0xe5c; // float32
			 uintptr_t m_flRecoveryTimeCrouch = 0xe60; // float32
			 uintptr_t m_flRecoveryTimeStand = 0xe64; // float32
			 uintptr_t m_flRecoveryTimeCrouchFinal = 0xe68; // float32
			 uintptr_t m_flRecoveryTimeStandFinal = 0xe6c; // float32
			 uintptr_t m_nRecoveryTransitionStartBullet = 0xe70; // int32
			 uintptr_t m_nRecoveryTransitionEndBullet = 0xe74; // int32
			 uintptr_t m_flThrowVelocity = 0xe78; // float32
			 uintptr_t m_vSmokeColor = 0xe7c; // Vector
			 uintptr_t m_szAnimClass = 0xe88; // CGlobalSymbol
		}
	}
}
